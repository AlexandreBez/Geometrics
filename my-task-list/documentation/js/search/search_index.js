var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.445,1,0.576]],["body/components/AppComponent.html",[0,0.741,1,1.011,2,1.675,3,0.853,4,0.677,5,1.616,6,1.616,7,1.616,8,1.616,9,0.677,10,2.03,11,1.616,12,2.494,13,2.494,14,2.603,15,2.072,16,3.764,17,2.072,18,3.41,19,1.059,20,0.081,21,0.853,22,0.853,23,1.059,24,1.616,25,2.072,26,2.072,27,1.616,28,2.412,29,1.616,30,1.358,31,1.616,32,0.677,33,1.616,34,0.677,35,1.616,36,1.616,37,1.616,38,0.062,39,0.062]],["title/modules/AppModule.html",[40,1.727,41,1.111]],["body/modules/AppModule.html",[1,1.114,3,0.75,4,0.595,9,0.595,19,1.676,20,0.083,21,0.75,22,0.75,23,0.931,32,1.032,34,1.032,38,0.057,39,0.057,41,2.134,42,1.42,43,1.539,44,1.784,45,1.784,46,1.784,47,2.392,48,1.784,49,1.42,50,2.337,51,3.133,52,2.392,53,3.133,54,3.133,55,2.392,56,1.42,57,2.337,58,3.133,59,2.337,60,3.133,61,1.784,62,3.133,63,1.42,64,2.337,65,2.337,66,2.337,67,2.337]],["title/components/HeaderComponent.html",[0,0.445,32,0.576]],["body/components/HeaderComponent.html",[0,0.733,1,0.664,2,1.653,3,0.836,4,0.664,5,1.583,6,1.583,7,1.583,8,1.583,9,0.664,11,1.583,12,2.479,13,2.479,15,2.045,17,2.045,19,1.038,20,0.081,21,0.836,22,0.836,23,1.038,24,1.583,25,2.045,26,2.045,27,1.583,28,2.394,29,1.583,30,1.34,31,1.583,32,1.003,33,1.583,34,0.664,35,1.583,36,1.583,37,1.583,38,0.061,39,0.061,68,1.989,69,3.365,70,3.727,71,3.365,72,3.365,73,3.365]],["title/interfaces/Task.html",[74,1.111,75,0.901]],["body/interfaces/Task.html",[3,0.952,4,0.755,9,0.755,20,0.079,22,0.952,38,0.066,39,0.066,74,1.457,75,1.72,76,2.966,77,2.264,78,1.457,79,1.794,80,2.509,81,2.219,82,3.153,83,2.624,84,1.944,85,2.404]],["title/injectables/TaskService.html",[86,1.111,87,1.111]],["body/injectables/TaskService.html",[3,0.598,4,0.474,9,0.474,14,1.422,19,1.364,20,0.083,21,0.598,22,0.598,23,0.742,30,1.444,38,0.049,39,0.049,61,1.422,75,1.659,78,0.915,80,2.499,81,2.203,83,2.556,84,1.781,85,2.463,86,1.315,87,1.315,88,1.863,89,1.422,90,2.043,91,2.043,92,2.614,93,2.043,94,2.043,95,2.676,96,1.422,97,1.863,98,3.424,99,2.882,100,1.863,101,2.768,102,2.676,103,2.043,104,1.863,105,2.391,106,2.768,107,4.164,108,1.863,109,2.676,110,1.863,111,2.676,112,1.863,113,2.676,114,1.863,115,1.863,116,1.132,117,1.863,118,1.422,119,2.768,120,1.863,121,1.863,122,1.863,123,1.863,124,2.043,125,1.863,126,1.863]],["title/components/TaskformComponent.html",[0,0.445,34,0.576]],["body/components/TaskformComponent.html",[0,0.308,1,0.17,2,0.576,3,0.214,4,0.17,5,0.406,6,0.406,7,0.406,8,0.406,9,0.17,11,0.406,12,1.299,13,1.299,15,0.712,17,0.712,19,0.852,20,0.084,21,0.214,22,0.214,23,0.266,24,0.406,25,0.712,26,0.712,27,0.406,28,1.142,29,0.406,30,0.852,31,0.406,32,0.17,33,0.406,34,0.479,35,1.43,36,0.406,37,0.406,38,0.021,39,0.021,63,0.406,75,1.495,78,0.769,79,0.576,80,1.541,81,0.951,82,1.194,83,0.406,84,1.689,85,1.637,87,1.156,90,0.894,91,0.894,92,1.435,93,1.435,94,1.435,96,0.51,99,2.839,101,1.194,103,0.894,105,1.194,106,2.056,116,0.406,118,0.51,119,2.625,124,1.435,127,0.51,128,0.894,129,1.565,130,1.565,131,1.172,132,1.565,133,1.565,134,1.565,135,1.565,136,2.138,137,1.565,138,1.565,139,2.138,140,2.138,141,2.138,142,1.565,143,1.88,144,1.88,145,1.172,146,0.668,147,1.172,148,0.668,149,2.694,150,0.668,151,0.668,152,0.668,153,0.668,154,0.668,155,1.172,156,0.668,157,0.668,158,0.668,159,0.668,160,3.148,161,2.537,162,2.537,163,4.027,164,0.668,165,0.668,166,0.668,167,0.668,168,0.668,169,0.668,170,2.138,171,1.172,172,1.172,173,0.668,174,0.668,175,0.668,176,1.172,177,0.668,178,0.668,179,0.668,180,0.668,181,0.668,182,0.668,183,0.668,184,0.668,185,0.51,186,0.668,187,0.668,188,0.668,189,1.88,190,2.354,191,1.172,192,1.565,193,1.88,194,2.949,195,0.668,196,1.172,197,1.172,198,0.668,199,0.668,200,1.565,201,2.354,202,2.138,203,2.138,204,2.138,205,2.138,206,2.694,207,1.172,208,3.232,209,2.694,210,1.172,211,2.138,212,2.949,213,2.949,214,2.949,215,2.949,216,2.949,217,2.949,218,2.949,219,2.949,220,0.668,221,0.668,222,0.668,223,0.668,224,1.88,225,1.88,226,1.565,227,1.565,228,0.668,229,0.668,230,0.668,231,0.668,232,0.668,233,1.172,234,1.172,235,1.172,236,1.565,237,0.668,238,1.88,239,1.172,240,0.668,241,0.668,242,0.668,243,0.668,244,0.668,245,0.668,246,0.668,247,2.138,248,0.668,249,1.172,250,0.668,251,1.172,252,0.668,253,0.668,254,1.172,255,1.88,256,1.88,257,1.88,258,1.172,259,1.172,260,2.354,261,1.172,262,1.172,263,1.88,264,0.668,265,0.668,266,0.668,267,0.668,268,1.172,269,0.668,270,0.668,271,0.668,272,1.172,273,0.668,274,0.668,275,1.194,276,0.668,277,0.668,278,0.668,279,1.172,280,0.668,281,1.172,282,1.172,283,1.88,284,0.668,285,0.668,286,1.172,287,0.668,288,0.668,289,1.172,290,0.668,291,0.668,292,0.668,293,0.668,294,0.668,295,0.668,296,0.668,297,0.668,298,0.668]],["title/coverage.html",[299,2.34]],["body/coverage.html",[0,0.784,1,0.767,9,0.767,10,2.3,20,0.08,32,0.767,34,0.767,38,0.067,39,0.067,68,2.3,74,1.48,75,1.2,77,2.3,84,1.48,86,1.48,87,1.48,89,2.3,127,2.3,275,3.252,299,2.3,300,3.012,301,3.012,302,3.012,303,3.687,304,3.012,305,3.012,306,3.012,307,2.3,308,3.012,309,3.012]],["title/dependencies.html",[43,1.334,310,1.155]],["body/dependencies.html",[20,0.083,21,0.948,38,0.066,39,0.066,43,1.451,52,2.256,55,2.781,56,2.214,63,1.795,116,1.795,185,2.256,311,4.45,312,2.954,313,2.954,314,2.954,315,2.954,316,2.954,317,2.954,318,2.954,319,2.954,320,2.954,321,2.954,322,2.954,323,2.954]],["title/index.html",[78,0.934,324,1.9,325,1.9]],["body/index.html",[0,0.707,4,0.616,20,0.058,30,0.963,38,0.058,39,0.058,49,1.469,128,1.845,307,1.845,310,1.469,326,2.417,327,3.204,328,2.417,329,3.594,330,3.594,331,1.845,332,2.417,333,2.417,334,3.204,335,3.982,336,4.175,337,2.417,338,2.417,339,2.417,340,2.417,341,2.417,342,2.417,343,2.417,344,2.417,345,2.417,346,2.417,347,2.417,348,3.594,349,3.594,350,2.417,351,3.827,352,2.417,353,2.417,354,2.417,355,2.417,356,3.204,357,3.204,358,3.827,359,2.417,360,3.204,361,3.204,362,2.417,363,4.092,364,2.417,365,2.417,366,2.417,367,3.204,368,2.417,369,2.417,370,2.417,371,2.417,372,2.417,373,2.417,374,3.594,375,2.417,376,2.417,377,2.417,378,1.469,379,2.417,380,2.417]],["title/modules.html",[42,1.862]],["body/modules.html",[20,0.073,38,0.073,39,0.073,41,1.699,42,2.101,56,2.101,381,3.458,382,3.458,383,3.458]],["title/overview.html",[378,1.862]],["body/overview.html",[1,1.113,2,1.451,20,0.078,32,1.006,34,1.006,38,0.066,39,0.066,40,2.256,41,2.186,43,1.79,44,2.256,45,2.256,46,2.256,47,2.781,48,2.256,49,1.795,74,1.451,86,1.451,378,1.795,384,3.95,385,2.954]],["title/properties.html",[79,1.334,310,1.155]],["body/properties.html",[20,0.077,38,0.073,39,0.073,79,1.714,331,2.664,386,3.489]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":275,"title":{},"body":{"components/TaskformComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":386,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":296,"title":{},"body":{"components/TaskformComponent.html":{}}}],["0/1",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":292,"title":{},"body":{"components/TaskformComponent.html":{}}}],["1",{"_index":384,"title":{},"body":{"overview.html":{}}}],["1.10.3",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":298,"title":{},"body":{"components/TaskformComponent.html":{}}}],["100vh",{"_index":294,"title":{},"body":{"components/TaskformComponent.html":{}}}],["100vw",{"_index":297,"title":{},"body":{"components/TaskformComponent.html":{}}}],["11",{"_index":290,"title":{},"body":{"components/TaskformComponent.html":{}}}],["15.1.0",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["15.1.1",{"_index":332,"title":{},"body":{"index.html":{}}}],["2.3.0",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":227,"title":{},"body":{"components/TaskformComponent.html":{}}}],["204",{"_index":207,"title":{},"body":{"components/TaskformComponent.html":{}}}],["24px",{"_index":285,"title":{},"body":{"components/TaskformComponent.html":{}}}],["2px",{"_index":276,"title":{},"body":{"components/TaskformComponent.html":{}}}],["3",{"_index":385,"title":{},"body":{"overview.html":{}}}],["333",{"_index":277,"title":{},"body":{"components/TaskformComponent.html":{}}}],["35",{"_index":266,"title":{},"body":{"components/TaskformComponent.html":{}}}],["40",{"_index":264,"title":{},"body":{"components/TaskformComponent.html":{}}}],["404",{"_index":246,"title":{},"body":{"components/TaskformComponent.html":{}}}],["50",{"_index":283,"title":{},"body":{"components/TaskformComponent.html":{}}}],["500",{"_index":211,"title":{},"body":{"components/TaskformComponent.html":{}}}],["500px",{"_index":280,"title":{},"body":{"components/TaskformComponent.html":{}}}],["7.8.0",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":272,"title":{},"body":{"components/TaskformComponent.html":{}}}],["_priorityloaded",{"_index":132,"title":{},"body":{"components/TaskformComponent.html":{}}}],["_taskloaded",{"_index":133,"title":{},"body":{"components/TaskformComponent.html":{}}}],["actual_component",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["add",{"_index":370,"title":{},"body":{"index.html":{}}}],["again",{"_index":218,"title":{},"body":{"components/TaskformComponent.html":{}}}],["angular",{"_index":329,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":185,"title":{},"body":{"components/TaskformComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/TaskService.html":{}}}],["angular/compiler",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"components/TaskformComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":178,"title":{},"body":{"components/TaskformComponent.html":{}}}],["anymore",{"_index":235,"title":{},"body":{"components/TaskformComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["app.component",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":341,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":41,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":352,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":342,"title":{},"body":{"index.html":{}}}],["background",{"_index":268,"title":{},"body":{"components/TaskformComponent.html":{}}}],["bootstrap",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":270,"title":{},"body":{"components/TaskformComponent.html":{}}}],["box",{"_index":273,"title":{},"body":{"components/TaskformComponent.html":{}}}],["browse",{"_index":383,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":261,"title":{},"body":{"components/TaskformComponent.html":{}}}],["build",{"_index":351,"title":{},"body":{"index.html":{}}}],["cancelupdate",{"_index":143,"title":{},"body":{"components/TaskformComponent.html":{}}}],["capabilities",{"_index":372,"title":{},"body":{"index.html":{}}}],["case",{"_index":206,"title":{},"body":{"components/TaskformComponent.html":{}}}],["change",{"_index":344,"title":{},"body":{"index.html":{}}}],["check",{"_index":377,"title":{},"body":{"index.html":{}}}],["choice",{"_index":366,"title":{},"body":{"index.html":{}}}],["class",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["cli",{"_index":330,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":346,"title":{},"body":{"index.html":{}}}],["command",{"_index":367,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{},"overview.html":{}}}],["console.log(data",{"_index":202,"title":{},"body":{"components/TaskformComponent.html":{}}}],["console.log(error",{"_index":208,"title":{},"body":{"components/TaskformComponent.html":{}}}],["constructor",{"_index":96,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["constructor(http",{"_index":97,"title":{},"body":{"injectables/TaskService.html":{}}}],["constructor(private",{"_index":118,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["constructor(taskservice",{"_index":146,"title":{},"body":{"components/TaskformComponent.html":{}}}],["coverage",{"_index":299,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":192,"title":{},"body":{"components/TaskformComponent.html":{}}}],["created",{"_index":210,"title":{},"body":{"components/TaskformComponent.html":{}}}],["createdtask",{"_index":122,"title":{},"body":{"injectables/TaskService.html":{}}}],["data",{"_index":201,"title":{},"body":{"components/TaskformComponent.html":{}}}],["declarations",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":171,"title":{},"body":{"components/TaskformComponent.html":{}}}],["default",{"_index":160,"title":{},"body":{"components/TaskformComponent.html":{}}}],["defaultpriorityvalue",{"_index":134,"title":{},"body":{"components/TaskformComponent.html":{}}}],["defaulttaskvalue",{"_index":135,"title":{},"body":{"components/TaskformComponent.html":{}}}],["defined",{"_index":99,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["deleted",{"_index":231,"title":{},"body":{"components/TaskformComponent.html":{}}}],["deletetask",{"_index":91,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["deletetask(id",{"_index":103,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["dependencies",{"_index":43,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":338,"title":{},"body":{"index.html":{}}}],["development",{"_index":333,"title":{},"body":{"index.html":{}}}],["directive",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["directives",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":350,"title":{},"body":{"index.html":{}}}],["directory",{"_index":355,"title":{},"body":{"index.html":{}}}],["dist",{"_index":354,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["dont",{"_index":233,"title":{},"body":{"components/TaskformComponent.html":{}}}],["dynamic",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":364,"title":{},"body":{"index.html":{}}}],["element",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["end",{"_index":363,"title":{},"body":{"index.html":{}}}],["error",{"_index":203,"title":{},"body":{"components/TaskformComponent.html":{}}}],["error.error.status",{"_index":205,"title":{},"body":{"components/TaskformComponent.html":{}}}],["errormessage",{"_index":136,"title":{},"body":{"components/TaskformComponent.html":{}}}],["execute",{"_index":360,"title":{},"body":{"index.html":{}}}],["exist",{"_index":234,"title":{},"body":{"components/TaskformComponent.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["fff",{"_index":269,"title":{},"body":{"components/TaskformComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"coverage.html":{}}}],["files",{"_index":345,"title":{},"body":{"index.html":{}}}],["first",{"_index":369,"title":{},"body":{"index.html":{}}}],["fix",{"_index":214,"title":{},"body":{"components/TaskformComponent.html":{}}}],["fixed",{"_index":282,"title":{},"body":{"components/TaskformComponent.html":{}}}],["form",{"_index":190,"title":{},"body":{"components/TaskformComponent.html":{}}}],["formsmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["fullstack",{"_index":72,"title":{},"body":{"components/HeaderComponent.html":{}}}],["further",{"_index":373,"title":{},"body":{"index.html":{}}}],["generate",{"_index":348,"title":{},"body":{"index.html":{}}}],["generated",{"_index":328,"title":{},"body":{"index.html":{}}}],["getalltasks",{"_index":92,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["gettaskbyid",{"_index":93,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["gettaskbyid(id",{"_index":109,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettaskbyid(this.task_id",{"_index":240,"title":{},"body":{"components/TaskformComponent.html":{}}}],["getting",{"_index":324,"title":{"index.html":{}},"body":{}}],["go",{"_index":376,"title":{},"body":{"index.html":{}}}],["group",{"_index":179,"title":{},"body":{"components/TaskformComponent.html":{}}}],["header",{"_index":69,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["header.component.css",{"_index":70,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":71,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":32,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":293,"title":{},"body":{"components/TaskformComponent.html":{}}}],["help",{"_index":374,"title":{},"body":{"index.html":{}}}],["high",{"_index":256,"title":{},"body":{"components/TaskformComponent.html":{}}}],["html",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["http",{"_index":102,"title":{},"body":{"injectables/TaskService.html":{}}}],["http://localhost:4200",{"_index":340,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":98,"title":{},"body":{"injectables/TaskService.html":{}}}],["httpclientmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["icons",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":105,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["identifier",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":128,"title":{},"body":{"components/TaskformComponent.html":{},"index.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":78,"title":{"index.html":{}},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["injectable",{"_index":86,"title":{"injectables/TaskService.html":{}},"body":{"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/TaskService.html":{}}}],["interface",{"_index":74,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":76,"title":{},"body":{"interfaces/Task.html":{}}}],["karma",{"_index":362,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":180,"title":{},"body":{"components/TaskformComponent.html":{}}}],["later",{"_index":219,"title":{},"body":{"components/TaskformComponent.html":{}}}],["left",{"_index":263,"title":{},"body":{"components/TaskformComponent.html":{}}}],["legend",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["list",{"_index":73,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loadedtask",{"_index":137,"title":{},"body":{"components/TaskformComponent.html":{}}}],["loadedtasks",{"_index":138,"title":{},"body":{"components/TaskformComponent.html":{}}}],["low",{"_index":162,"title":{},"body":{"components/TaskformComponent.html":{}}}],["map",{"_index":187,"title":{},"body":{"components/TaskformComponent.html":{}}}],["map((responsedata",{"_index":197,"title":{},"body":{"components/TaskformComponent.html":{}}}],["margin",{"_index":262,"title":{},"body":{"components/TaskformComponent.html":{}}}],["matching",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["medium",{"_index":255,"title":{},"body":{"components/TaskformComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["methods",{"_index":90,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["min",{"_index":278,"title":{},"body":{"components/TaskformComponent.html":{}}}],["modalaux",{"_index":267,"title":{},"body":{"components/TaskformComponent.html":{}}}],["models/task",{"_index":115,"title":{},"body":{"injectables/TaskService.html":{}}}],["module",{"_index":40,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":42,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":375,"title":{},"body":{"index.html":{}}}],["mytasklist",{"_index":326,"title":{},"body":{"index.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"index.html":{}}}],["navigate",{"_index":339,"title":{},"body":{"index.html":{}}}],["need",{"_index":368,"title":{},"body":{"index.html":{}}}],["new",{"_index":307,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ng",{"_index":336,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":170,"title":{},"body":{"components/TaskformComponent.html":{}}}],["ngmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":144,"title":{},"body":{"components/TaskformComponent.html":{}}}],["null",{"_index":163,"title":{},"body":{"components/TaskformComponent.html":{}}}],["number",{"_index":85,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["observable",{"_index":107,"title":{},"body":{"injectables/TaskService.html":{}}}],["oninit",{"_index":129,"title":{},"body":{"components/TaskformComponent.html":{}}}],["opacity",{"_index":295,"title":{},"body":{"components/TaskformComponent.html":{}}}],["opss...something",{"_index":212,"title":{},"body":{"components/TaskformComponent.html":{}}}],["opss...this",{"_index":232,"title":{},"body":{"components/TaskformComponent.html":{}}}],["optional",{"_index":81,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overlay",{"_index":291,"title":{},"body":{"components/TaskformComponent.html":{}}}],["overview",{"_index":378,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":310,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":284,"title":{},"body":{"components/TaskformComponent.html":{}}}],["page",{"_index":380,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":101,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["pipe",{"_index":196,"title":{},"body":{"components/TaskformComponent.html":{}}}],["platform",{"_index":365,"title":{},"body":{"index.html":{}}}],["please",{"_index":216,"title":{},"body":{"components/TaskformComponent.html":{}}}],["position",{"_index":281,"title":{},"body":{"components/TaskformComponent.html":{}}}],["priority",{"_index":80,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["priority).subscribe",{"_index":223,"title":{},"body":{"components/TaskformComponent.html":{}}}],["project",{"_index":327,"title":{},"body":{"index.html":{}}}],["properties",{"_index":79,"title":{"properties.html":{}},"body":{"interfaces/Task.html":{},"components/TaskformComponent.html":{},"properties.html":{}}}],["providedin",{"_index":117,"title":{},"body":{"injectables/TaskService.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["radius",{"_index":271,"title":{},"body":{"components/TaskformComponent.html":{}}}],["reference",{"_index":379,"title":{},"body":{"index.html":{}}}],["reload",{"_index":343,"title":{},"body":{"index.html":{}}}],["remove",{"_index":258,"title":{},"body":{"components/TaskformComponent.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsedata",{"_index":245,"title":{},"body":{"components/TaskformComponent.html":{}}}],["responsedata.map((tasks",{"_index":198,"title":{},"body":{"components/TaskformComponent.html":{}}}],["responsedata.priority",{"_index":244,"title":{},"body":{"components/TaskformComponent.html":{}}}],["responsedata.task",{"_index":242,"title":{},"body":{"components/TaskformComponent.html":{}}}],["results",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":119,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["returns",{"_index":106,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["root'},{'name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["run",{"_index":335,"title":{},"body":{"index.html":{}}}],["running",{"_index":356,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":116,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"dependencies.html":{}}}],["savetask",{"_index":94,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["savetask(task",{"_index":111,"title":{},"body":{"injectables/TaskService.html":{}}}],["scaffolding",{"_index":347,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["sendidforupdated",{"_index":145,"title":{},"body":{"components/TaskformComponent.html":{}}}],["sendidforupdated(id",{"_index":155,"title":{},"body":{"components/TaskformComponent.html":{}}}],["serve",{"_index":337,"title":{},"body":{"index.html":{}}}],["server",{"_index":334,"title":{},"body":{"index.html":{}}}],["server/service/task.service",{"_index":188,"title":{},"body":{"components/TaskformComponent.html":{}}}],["settimeout",{"_index":226,"title":{},"body":{"components/TaskformComponent.html":{}}}],["shadow",{"_index":274,"title":{},"body":{"components/TaskformComponent.html":{}}}],["soon",{"_index":215,"title":{},"body":{"components/TaskformComponent.html":{}}}],["sorry",{"_index":248,"title":{},"body":{"components/TaskformComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"index.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/header/header.component.ts",{"_index":68,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/server/models/task.ts",{"_index":77,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/server/service/task.service.ts",{"_index":89,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/server/service/task.service.ts:13",{"_index":108,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/server/service/task.service.ts:17",{"_index":110,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/server/service/task.service.ts:21",{"_index":112,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/server/service/task.service.ts:29",{"_index":114,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/server/service/task.service.ts:37",{"_index":104,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/server/service/task.service.ts:9",{"_index":100,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/taskform/taskform.component.ts",{"_index":127,"title":{},"body":{"components/TaskformComponent.html":{},"coverage.html":{}}}],["src/app/taskform/taskform.component.ts:112",{"_index":150,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:144",{"_index":156,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:149",{"_index":152,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:15",{"_index":169,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:17",{"_index":174,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:18",{"_index":175,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:185",{"_index":157,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:20",{"_index":159,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:21",{"_index":158,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:216",{"_index":148,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:22",{"_index":166,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:25",{"_index":177,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:28",{"_index":167,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:29",{"_index":165,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:30",{"_index":168,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:33",{"_index":173,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:35",{"_index":164,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:36",{"_index":147,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:40",{"_index":153,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:44",{"_index":151,"title":{},"body":{"components/TaskformComponent.html":{}}}],["src/app/taskform/taskform.component.ts:79",{"_index":154,"title":{},"body":{"components/TaskformComponent.html":{}}}],["started",{"_index":325,"title":{"index.html":{}},"body":{}}],["state",{"_index":181,"title":{},"body":{"components/TaskformComponent.html":{}}}],["statements",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":353,"title":{},"body":{"index.html":{}}}],["string",{"_index":83,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["style",{"_index":182,"title":{},"body":{"components/TaskformComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["subscribe",{"_index":200,"title":{},"body":{"components/TaskformComponent.html":{}}}],["success",{"_index":225,"title":{},"body":{"components/TaskformComponent.html":{}}}],["successmessage",{"_index":139,"title":{},"body":{"components/TaskformComponent.html":{}}}],["support",{"_index":381,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":382,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":204,"title":{},"body":{"components/TaskformComponent.html":{}}}],["table",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":75,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"coverage.html":{}}}],["task_id",{"_index":82,"title":{},"body":{"interfaces/Task.html":{},"components/TaskformComponent.html":{}}}],["taskdata.priority",{"_index":260,"title":{},"body":{"components/TaskformComponent.html":{}}}],["taskdata.task",{"_index":259,"title":{},"body":{"components/TaskformComponent.html":{}}}],["taskform",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["taskform.component.css",{"_index":130,"title":{},"body":{"components/TaskformComponent.html":{}}}],["taskform.component.html",{"_index":131,"title":{},"body":{"components/TaskformComponent.html":{}}}],["taskform/taskform.component",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["taskformcomponent",{"_index":34,"title":{"components/TaskformComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasks",{"_index":199,"title":{},"body":{"components/TaskformComponent.html":{}}}],["taskservice",{"_index":87,"title":{"injectables/TaskService.html":{}},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["test",{"_index":359,"title":{},"body":{"index.html":{}}}],["testing",{"_index":371,"title":{},"body":{"index.html":{}}}],["tests",{"_index":358,"title":{},"body":{"index.html":{}}}],["this._priorityloaded",{"_index":243,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this._taskloaded",{"_index":241,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.defaultpriorityvalue",{"_index":229,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.defaulttaskvalue",{"_index":228,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.errormessage",{"_index":209,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.getalltasks",{"_index":193,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.gettaskbyid",{"_index":237,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.http.delete('http://localhost:8080/deletetask/'+id",{"_index":126,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.get('http://localhost:8080/getalltasks",{"_index":120,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.get('http://localhost:8080/task/'+id",{"_index":121,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.post('http://localhost:8080/createtask',createdtask",{"_index":123,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.put('http://localhost:8080/updatetask/'+id",{"_index":125,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.loadedtask",{"_index":238,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.loadedtasks",{"_index":194,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.successmessage",{"_index":224,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.task_id",{"_index":236,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.taskform.value.priority",{"_index":221,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.taskform.value.task",{"_index":220,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.taskservice",{"_index":239,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.taskservice.deletetask(id).subscribe",{"_index":230,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.taskservice.getalltasks",{"_index":195,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.taskservice.savetask(task",{"_index":222,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.updatederrormessage",{"_index":247,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.updatedsuccessmessage",{"_index":254,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.updateform.value.updated_priority",{"_index":252,"title":{},"body":{"components/TaskformComponent.html":{}}}],["this.updateform.value.updated_task",{"_index":250,"title":{},"body":{"components/TaskformComponent.html":{}}}],["top",{"_index":286,"title":{},"body":{"components/TaskformComponent.html":{}}}],["transform",{"_index":287,"title":{},"body":{"components/TaskformComponent.html":{}}}],["transition",{"_index":183,"title":{},"body":{"components/TaskformComponent.html":{}}}],["translate",{"_index":288,"title":{},"body":{"components/TaskformComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["trigger",{"_index":184,"title":{},"body":{"components/TaskformComponent.html":{}}}],["try",{"_index":217,"title":{},"body":{"components/TaskformComponent.html":{}}}],["tslib",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":84,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TaskformComponent.html":{},"coverage.html":{}}}],["unit",{"_index":357,"title":{},"body":{"index.html":{}}}],["update",{"_index":257,"title":{},"body":{"components/TaskformComponent.html":{}}}],["updated",{"_index":189,"title":{},"body":{"components/TaskformComponent.html":{}}}],["updated_priority",{"_index":251,"title":{},"body":{"components/TaskformComponent.html":{}}}],["updated_task",{"_index":249,"title":{},"body":{"components/TaskformComponent.html":{}}}],["updatederrormessage",{"_index":140,"title":{},"body":{"components/TaskformComponent.html":{}}}],["updatedsuccessmessage",{"_index":141,"title":{},"body":{"components/TaskformComponent.html":{}}}],["updatedtask",{"_index":124,"title":{},"body":{"injectables/TaskService.html":{},"components/TaskformComponent.html":{}}}],["updateform",{"_index":142,"title":{},"body":{"components/TaskformComponent.html":{}}}],["updatetask",{"_index":95,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask(id",{"_index":113,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask(this.task_id",{"_index":253,"title":{},"body":{"components/TaskformComponent.html":{}}}],["use",{"_index":349,"title":{},"body":{"index.html":{}}}],["value",{"_index":161,"title":{},"body":{"components/TaskformComponent.html":{}}}],["var",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/TaskformComponent.html":{}}}],["variables",{"_index":191,"title":{},"body":{"components/TaskformComponent.html":{}}}],["version",{"_index":331,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":361,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":186,"title":{},"body":{"components/TaskformComponent.html":{}}}],["viewchild('taskform",{"_index":172,"title":{},"body":{"components/TaskformComponent.html":{}}}],["viewchild('updateform",{"_index":176,"title":{},"body":{"components/TaskformComponent.html":{}}}],["void",{"_index":149,"title":{},"body":{"components/TaskformComponent.html":{}}}],["warning",{"_index":265,"title":{},"body":{"components/TaskformComponent.html":{}}}],["width",{"_index":279,"title":{},"body":{"components/TaskformComponent.html":{}}}],["working",{"_index":213,"title":{},"body":{"components/TaskformComponent.html":{}}}],["z",{"_index":289,"title":{},"body":{"components/TaskformComponent.html":{}}}],["zone.js",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'TaskformComponent', 'selector': 'app-taskform'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nTaskformComponent\n\nTaskformComponent\n\nAppModule -->\n\nTaskformComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            TaskformComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { TaskformComponent } from './taskform/taskform.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    TaskformComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n}\n\n    \n\n    \n        \n    \n      \n        My Fullstack list\n      \n      \n        \n      \n      \n      \n    \n  \n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  My Fullstack list                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'TaskformComponent', 'selector': 'app-taskform'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/server/models/task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n    task_id?: number,\n    task: string,\n    priority: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/server/service/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                getAllTasks\n                            \n                            \n                                getTaskById\n                            \n                            \n                                saveTask\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/server/service/task.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/server/service/task.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \ngetAllTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/server/service/task.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/server/service/task.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTask\n                        \n                    \n                \n            \n            \n                \nsaveTask(task: string, priority: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/server/service/task.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    priority\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n            \n                \nupdateTask(id: number, task: string, priority: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/server/service/task.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    task\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    priority\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Task } from '../models/task';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient) {}\n\n  getAllTasks():  Observable {\n    return this.http.get('http://localhost:8080/getAllTasks');\n  }\n\n  getTaskById(id: number):  Observable {\n    return this.http.get('http://localhost:8080/task/'+id);\n  }\n\n  saveTask(task: string, priority: string): Observable {\n    let createdTask: Task = {\n        task: task,\n        priority: priority\n    }\n    return this.http.post('http://localhost:8080/createTask',createdTask);\n  }\n\n  updateTask(id: number, task: string, priority: string): Observable {\n    let updatedTask: Task = {\n        task: task,\n        priority: priority\n    }\n    return this.http.put('http://localhost:8080/updateTask/'+id, updatedTask);\n  }\n\n  deleteTask(id: number): Observable {\n    return this.http.delete('http://localhost:8080/deleteTask/'+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskformComponent.html":{"url":"components/TaskformComponent.html","title":"component - TaskformComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskformComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/taskform/taskform.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-taskform\n            \n\n            \n                styleUrls\n                ./taskform.component.css\n            \n\n\n\n            \n                templateUrl\n                ./taskform.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _priorityLoaded\n                            \n                            \n                                _taskLoaded\n                            \n                            \n                                defaultPriorityValue\n                            \n                            \n                                defaultTaskValue\n                            \n                            \n                                errorMessage\n                            \n                            \n                                loadedTask\n                            \n                            \n                                loadedTasks\n                            \n                            \n                                successMessage\n                            \n                            \n                                task_id\n                            \n                            \n                                taskForm\n                            \n                            \n                                updatedErrorMessage\n                            \n                            \n                                updatedSuccessMessage\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelUpdate\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getAllTasks\n                            \n                            \n                                getTaskById\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveTask\n                            \n                            \n                                sendIdForUpdated\n                            \n                            \n                                updatedTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/taskform/taskform.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelUpdate\n                        \n                    \n                \n            \n            \n                \ncancelUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/taskform/taskform.component.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/taskform/taskform.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \ngetAllTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/taskform/taskform.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById()\n                \n            \n\n\n            \n                \n                    Defined in src/app/taskform/taskform.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/taskform/taskform.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTask\n                        \n                    \n                \n            \n            \n                \nsaveTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/taskform/taskform.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendIdForUpdated\n                        \n                    \n                \n            \n            \n                \nsendIdForUpdated(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/taskform/taskform.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedTask\n                        \n                    \n                \n            \n            \n                \nupdatedTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/taskform/taskform.component.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _priorityLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _taskLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultPriorityValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Low'\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultTaskValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadedTask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadedTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgForm\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('taskForm')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedErrorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedSuccessMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgForm\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('updateForm')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/taskform/taskform.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { animate, group, keyframes, state, style, transition, trigger } from '@angular/animations';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { map } from 'rxjs';\nimport { TaskService } from '../server/service/task.service';\n\n@Component({\n  selector: 'app-taskform',\n  templateUrl: './taskform.component.html',\n  styleUrls: ['./taskform.component.css'],\n})\nexport class TaskformComponent implements OnInit {\n\n  // Updated task Form variables\n  task_id: number = null;\n\n  updatedErrorMessage = null;\n  updatedSuccessMessage = null;\n\n  _taskLoaded: any;\n  _priorityLoaded: any;\n  loadedTask: any;\n\n  @ViewChild('updateForm')\n  updateForm!: NgForm;\n\n  // Create task Form variables\n  loadedTasks: any;\n  errorMessage = null;\n  successMessage = null;\n\n  @ViewChild('taskForm')\n  taskForm!: NgForm;\n\n  defaultTaskValue = null;\n  defaultPriorityValue = 'Low';\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit() {\n    this.getAllTasks();\n  }\n\n  getAllTasks() {\n    this.loadedTasks = this.taskService.getAllTasks()\n      .pipe(\n        map((responseData) => {\n          return responseData.map((tasks) => {\n            return { ...tasks };\n          });\n        })\n      )\n      .subscribe(\n        (data) => {\n          this.loadedTasks = data;\n          console.log(data);\n        },\n        (error) => {\n          switch (error.error.status) {\n            case 204:\n              this.loadedTasks = null;\n              console.log(error);\n              return (this.errorMessage = 'You have no task created....');\n            case 500:\n              this.loadedTasks = null;\n              console.log(error);\n              return (this.errorMessage =\n                'Opss...Something is not working but we will fix soon. Please try again later');\n            default:\n              this.loadedTasks = null;\n              console.log(error);\n              return (this.errorMessage =\n                'Opss...Something is not working but we will fix soon. Please try again later');\n          }\n        }\n      );\n  }\n\n  saveTask() {\n    let task = this.taskForm.value.task;\n    let priority = this.taskForm.value.priority;\n\n    this.taskService.saveTask(task, priority).subscribe(\n      (data) => {\n        this.successMessage = 'Task created with success...';\n        setTimeout(() => {\n          this.successMessage = null;\n        }, 2000);\n        console.log(data);\n        this.getAllTasks();\n      },\n      (error) => {\n        switch (error.error.status) {\n          case 500:\n            this.loadedTasks = null;\n            console.log(error);\n            return (this.errorMessage =\n              'Opss...Something is not working but we will fix soon. Please try again later');\n          default:\n            this.loadedTasks = null;\n            console.log(error);\n            return (this.errorMessage =\n              'Opss...Something is not working but we will fix soon. Please try again later');\n        }\n      }\n    );\n\n    this.defaultTaskValue = null;\n    this.defaultPriorityValue = 'Low';\n  }\n\n  deleteTask(id: number) {\n    this.taskService.deleteTask(id).subscribe(\n      (data) => {\n        this.successMessage = 'Task deleted with success...';\n        console.log(data);\n        setTimeout(() => {\n          this.successMessage = null;\n        }, 2000);\n        this.getAllTasks();\n      },\n      (error) => {\n        switch (error.error.status) {\n          case 204:\n            this.loadedTasks = null;\n            console.log(error);\n            return (this.errorMessage =\n              'Opss...This task dont exist anymore....');\n          case 500:\n            this.loadedTasks = null;\n            console.log(error);\n            return (this.errorMessage =\n              'Opss...Something is not working but we will fix soon. Please try again later');\n          default:\n            this.loadedTasks = null;\n            console.log(error);\n            return (this.errorMessage =\n              'Opss...Something is not working but we will fix soon. Please try again later');\n        }\n      }\n    );\n  }\n\n  sendIdForUpdated(id: number) {\n    this.task_id = id;\n    this.getTaskById();\n  }\n\n  getTaskById() {\n    this.loadedTask = this.taskService\n      .getTaskById(this.task_id)\n      .pipe(\n        map((responseData) => {\n          this._taskLoaded = responseData.task;\n          this._priorityLoaded = responseData.priority;\n          return responseData;\n        })\n      )\n      .subscribe(\n        (data) => {\n          console.log(data);\n        },\n        (error) => {\n          switch (error.error.status) {\n            case 404:\n              this.loadedTask = null;\n              console.log(error);\n              return (this.updatedErrorMessage =\n                'Sorry but this task dont exist anymore....');\n            case 500:\n              this.loadedTask = null;\n              console.log(error);\n              return (this.updatedErrorMessage =\n                'Opss...Something is not working but we will fix soon. Please try again later');\n            default:\n              this.loadedTask = null;\n              console.log(error);\n              return (this.updatedErrorMessage =\n                'Opss...Something is not working but we will fix soon. Please try again later');\n          }\n        }\n      );\n  }\n\n  updatedTask() {\n    let updated_task = this.updateForm.value.updated_task;\n    let updated_priority = this.updateForm.value.updated_priority;\n\n    this.taskService\n      .updateTask(this.task_id, updated_task, updated_priority)\n      .subscribe(\n        (data) => {\n          this.updatedSuccessMessage = 'Task updated with success...';\n          console.log(data);\n          setTimeout(() => {\n            this.updatedSuccessMessage = null;\n            this.task_id = null;\n            this.getAllTasks();\n          }, 2000);\n        },\n        (error) => {\n          switch (error.error.status) {\n            case 500:\n              console.log(error);\n              return (this.updatedErrorMessage =\n                'Opss...Something is not working but we will fix soon. Please try again later');\n            default:\n              console.log(error);\n              return (this.updatedErrorMessage =\n                'Opss...Something is not working but we will fix soon. Please try again later');\n          }\n        }\n      );\n  }\n\n  cancelUpdate() {\n    this.task_id = null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      Updated Task Form\n      \n      \n        \n        {{ updatedErrorMessage }}\n      \n\n      \n        \n        {{updatedSuccessMessage}}\n      \n      \n        \n        \n          \n          Task\n        \n      \n\n      \n        \n          \n          Priority\n        \n        \n          Low\n          Medium\n          High\n        \n      \n\n      \n        \n        Update Task\n      \n\n    \n  \n  \n  \n\n\n\n\n  Task Form\n  \n  \n    \n    {{ errorMessage }}\n  \n\n  \n    \n    {{successMessage}}\n  \n  \n\n    \n      \n      \n        \n        Task\n      \n    \n\n    \n      \n        \n        Priority\n      \n      \n        Low\n        Medium\n        High\n      \n    \n\n    \n      \n      Create Task\n    \n\n  \n  \n\n  \n    \n   -->\n\n  \n    \n      \n        \n          \n          Task\n        \n        \n          \n          Priority\n        \n        \n          \n          Update\n        \n        \n          \n          Remove\n        \n      \n    \n    \n      \n        {{ taskData.task }}\n        \n          \n            {{ taskData.priority }}\n          \n          \n            {{ taskData.priority }}\n          \n          \n            {{ taskData.priority }}\n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./taskform.component.css\n                \n                .btn-success{\n    margin-left: 40%;\n}\n\n.btn-warning{\n    margin-left: 35%;\n}\n\n.modalAux {\n    background: #fff;\n    border-radius: 8px;\n    box-shadow: 0 2px 8px #333;\n    min-width: 500px;\n    position: fixed;\n    left: 50%;\n    padding: 24px;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 11;\n}\n  \n.overlay {\n    background: #000;\n    height: 100vh;\n    left: 0;\n    opacity: 0.5;\n    position: fixed;\n    top: 0;\n    width: 100vw;\n    z-index: 10;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Updated Task Form                            {{ updatedErrorMessage }}                            {{updatedSuccessMessage}}                                                Task                                                Priority                          Low          Medium          High                                    Update Task                  Task Form            {{ errorMessage }}            {{successMessage}}                                    Task                                    Priority                    Low        Medium        High                          Create Task                 -->                                        Task                                    Priority                                    Update                                    Remove                                    {{ taskData.task }}                              {{ taskData.priority }}                                {{ taskData.priority }}                                {{ taskData.priority }}                                                                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'TaskformComponent', 'selector': 'app-taskform'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskformComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/server/models/task.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/server/service/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/taskform/taskform.component.ts\n            \n            component\n            TaskformComponent\n            \n                0 %\n                (0/23)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.1.0\n        \n            @angular/cdk : ^15.1.0\n        \n            @angular/common : ^15.1.0\n        \n            @angular/compiler : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @angular/forms : ^15.1.0\n        \n            @angular/platform-browser : ^15.1.0\n        \n            @angular/platform-browser-dynamic : ^15.1.0\n        \n            @angular/router : ^15.1.0\n        \n            bootstrap-icons : ^1.10.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyTaskList\nThis project was generated with Angular CLI version 15.1.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nTaskformComponent\n\nTaskformComponent\n\nAppModule -->\n\nTaskformComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
